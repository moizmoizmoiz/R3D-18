==========
Args:Namespace(root='/content/HMDB_simp', name='run8', workers=4, split=0.2, mprint=True, batch=64, lr=0.0003, lr_fc=0.003, decay=0.0, epochs=40, seed=42, save_dir='/content/drive/MyDrive/TensorBoard_Logs/logstxt/')
==========
Defined Transformations
==========
Transforming Data...
Total Classes = 25
  0%|          | 0/25 [00:00<?, ?it/s]
working on: brush_hair
  0%|          | 0/50 [00:00<?, ?it/s]
working on: handstand
  0%|          | 0/50 [00:00<?, ?it/s]
working on: situp
  0%|          | 0/50 [00:00<?, ?it/s]
working on: chew
  0%|          | 0/50 [00:00<?, ?it/s]
working on: climb
  0%|          | 0/50 [00:00<?, ?it/s]
working on: flic_flac
  0%|          | 0/50 [00:00<?, ?it/s]
working on: wave
  0%|          | 0/50 [00:00<?, ?it/s]
working on: ride_bike
  0%|          | 0/50 [00:00<?, ?it/s]
working on: climb_stairs
  0%|          | 0/50 [00:00<?, ?it/s]
working on: draw_sword
  0%|          | 0/50 [00:00<?, ?it/s]
working on: fencing
  0%|          | 0/50 [00:00<?, ?it/s]
working on: eat
  0%|          | 0/50 [00:00<?, ?it/s]
working on: shoot_bow
  0%|          | 0/50 [00:00<?, ?it/s]
working on: golf
  0%|          | 0/50 [00:00<?, ?it/s]
working on: cartwheel
  0%|          | 0/50 [00:00<?, ?it/s]
working on: smoke
  0%|          | 0/50 [00:00<?, ?it/s]
working on: kiss
  0%|          | 0/50 [00:00<?, ?it/s]
working on: pour
  0%|          | 0/50 [00:00<?, ?it/s]
working on: pullup
  0%|          | 0/50 [00:00<?, ?it/s]
working on: smile
  0%|          | 0/50 [00:00<?, ?it/s]
working on: pick
  0%|          | 0/50 [00:00<?, ?it/s]
working on: shoot_gun
  0%|          | 0/50 [00:00<?, ?it/s]
working on: throw
  0%|          | 0/50 [00:00<?, ?it/s]
working on: catch
  0%|          | 0/50 [00:00<?, ?it/s]
working on: pushup
  0%|          | 0/50 [00:00<?, ?it/s]
Done Transformation.
==========
Defining Model
Model size: 33.179 M
VideoResNet(
  (stem): BasicStem(
    (0): Conv3d(3, 64, kernel_size=(3, 7, 7), stride=(1, 2, 2), padding=(1, 3, 3), bias=False)
    (1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Sequential(
        (0): Conv3DSimple(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv2): Sequential(
        (0): Conv3DSimple(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU(inplace=True)
    )
    (1): BasicBlock(
      (conv1): Sequential(
        (0): Conv3DSimple(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv2): Sequential(
        (0): Conv3DSimple(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU(inplace=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Sequential(
        (0): Conv3DSimple(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv2): Sequential(
        (0): Conv3DSimple(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv3d(64, 128, kernel_size=(1, 1, 1), stride=(2, 2, 2), bias=False)
        (1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Sequential(
        (0): Conv3DSimple(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv2): Sequential(
        (0): Conv3DSimple(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU(inplace=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Sequential(
        (0): Conv3DSimple(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv2): Sequential(
        (0): Conv3DSimple(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv3d(128, 256, kernel_size=(1, 1, 1), stride=(2, 2, 2), bias=False)
        (1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Sequential(
        (0): Conv3DSimple(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv2): Sequential(
        (0): Conv3DSimple(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU(inplace=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Sequential(
        (0): Conv3DSimple(256, 512, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv2): Sequential(
        (0): Conv3DSimple(512, 512, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv3d(256, 512, kernel_size=(1, 1, 1), stride=(2, 2, 2), bias=False)
        (1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Sequential(
        (0): Conv3DSimple(512, 512, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (conv2): Sequential(
        (0): Conv3DSimple(512, 512, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): ReLU(inplace=True)
    )
  )
  (avgpool): AdaptiveAvgPool3d(output_size=(1, 1, 1))
  (fc): Sequential(
    (0): Linear(in_features=512, out_features=25, bias=True)
  )
  (classi): Sequential(
    (0): LogSoftmax(dim=1)
  )
)
==========
Loading Dataloaders...
==========
Device:  cuda
==========
Optimizer Defined...
==========
  0%|          | 0/40 [00:00<?, ?it/s]
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 2.8027 for epoch: 1/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 1.3049 for epoch: 2/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.4750 for epoch: 3/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.1259 for epoch: 4/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0461 for epoch: 5/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0259 for epoch: 6/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0354 for epoch: 7/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0130 for epoch: 8/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0074 for epoch: 9/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0046 for epoch: 10/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0024 for epoch: 11/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0016 for epoch: 12/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0012 for epoch: 13/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0011 for epoch: 14/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0011 for epoch: 15/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0008 for epoch: 16/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0007 for epoch: 17/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0008 for epoch: 18/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0007 for epoch: 19/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0006 for epoch: 20/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0005 for epoch: 21/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0005 for epoch: 22/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0005 for epoch: 23/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0005 for epoch: 24/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0005 for epoch: 25/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0004 for epoch: 26/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0004 for epoch: 27/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0004 for epoch: 28/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0004 for epoch: 29/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0003 for epoch: 30/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0004 for epoch: 31/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0004 for epoch: 32/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0003 for epoch: 33/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0003 for epoch: 34/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0003 for epoch: 35/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0002 for epoch: 36/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0002 for epoch: 37/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0002 for epoch: 38/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0002 for epoch: 39/40
Training:   0%|          | 0/16 [00:00<?, ?frames/s]
loss: 0.0002 for epoch: 40/40
Test:   0%|          | 0/3 [00:00<?, ?frames/s]
F1 score Generated
Test: Average loss: 1.2064, Top-1 Accuracy: 128/250 (66.67%), Top-5 Accuracy: 173/250 (90.10%)

Confusion Matrix Generated
Elapsed 0:14:37
